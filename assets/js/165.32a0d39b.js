(window.webpackJsonp=window.webpackJsonp||[]).push([[165],{375:function(t,a,s){"use strict";s.r(a);var e=s(33),n=Object(e.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"engine-services"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#engine-services"}},[t._v("#")]),t._v(" Engine Services")]),t._v(" "),s("p",[t._v("Most of the engine features are implemented via engine services. Engine service is an implementation of an "),s("code",[t._v("IEngineService")]),t._v(" interface, which handles a specific job, like executing naninovel scripts, managing actors or saving-loading the game state.")]),t._v(" "),s("p",[t._v("In case you wish to interact with an engine system, you'll most likely want to use an engine service. You can get a reference to an engine service using "),s("code",[t._v("Engine.GetService<TService>()")]),t._v(" static method, where "),s("code",[t._v("TService")]),t._v(" is the interface of the service you wish to get; e.g., to get a "),s("code",[t._v("IScriptPlayer")]),t._v(" service:")]),t._v(" "),s("div",{staticClass:"language-csharp extra-class"},[s("pre",{pre:!0,attrs:{class:"language-csharp"}},[s("code",[s("span",{pre:!0,attrs:{class:"token class-name"}},[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")])]),t._v(" player "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" Engine"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token generic-method"}},[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("GetService")]),s("span",{pre:!0,attrs:{class:"token generic class-name"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("IScriptPlayer"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nplayer"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Stop")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("p",[t._v("The following services are currently available:")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",[t._v("Service Interface")]),t._v(" "),s("th",[t._v("Description")])])]),t._v(" "),s("tbody",[s("tr",[s("td",[t._v("IBackgroundManager")]),t._v(" "),s("td",[t._v("Manages "),s("RouterLink",{attrs:{to:"/zh/guide/backgrounds.html"}},[t._v("background")]),t._v(" actors.")],1)]),t._v(" "),s("tr",[s("td",[t._v("ICharacterManager")]),t._v(" "),s("td",[t._v("Manages "),s("RouterLink",{attrs:{to:"/zh/guide/characters.html"}},[t._v("character")]),t._v(" actors.")],1)]),t._v(" "),s("tr",[s("td",[t._v("IChoiceHandlerManager")]),t._v(" "),s("td",[t._v("Manages "),s("RouterLink",{attrs:{to:"/zh/guide/choices.html"}},[t._v("choice handler")]),t._v(" actors.")],1)]),t._v(" "),s("tr",[s("td",[t._v("ITextPrinterManager")]),t._v(" "),s("td",[t._v("Manages "),s("RouterLink",{attrs:{to:"/zh/guide/text-printers.html"}},[t._v("text printer")]),t._v(" actors.")],1)]),t._v(" "),s("tr",[s("td",[t._v("IAudioManager")]),t._v(" "),s("td",[t._v("Manages the audio: "),s("RouterLink",{attrs:{to:"/zh/guide/audio.html#sound-effects"}},[t._v("SFX")]),t._v(", "),s("RouterLink",{attrs:{to:"/zh/guide/audio.html#background-music"}},[t._v("BGM")]),t._v(" and "),s("RouterLink",{attrs:{to:"/zh/guide/voicing.html"}},[t._v("voicing")]),t._v(".")],1)]),t._v(" "),s("tr",[s("td",[t._v("IInputManager")]),t._v(" "),s("td",[t._v("Manages the user "),s("RouterLink",{attrs:{to:"/zh/guide/input-processing.html"}},[t._v("input processing")]),t._v(".")],1)]),t._v(" "),s("tr",[s("td",[t._v("ILocalizationManager")]),t._v(" "),s("td",[t._v("Manages the "),s("RouterLink",{attrs:{to:"/zh/guide/localization.html"}},[t._v("localization")]),t._v(" activities.")],1)]),t._v(" "),s("tr",[s("td",[t._v("ITextManager")]),t._v(" "),s("td",[t._v("Handles "),s("RouterLink",{attrs:{to:"/zh/guide/managed-text.html"}},[t._v("managed text")]),t._v(" feature.")],1)]),t._v(" "),s("tr",[s("td",[t._v("IMoviePlayer")]),t._v(" "),s("td",[t._v("Handles "),s("RouterLink",{attrs:{to:"/zh/guide/movies.html"}},[t._v("movie")]),t._v(" playing.")],1)]),t._v(" "),s("tr",[s("td",[t._v("IScriptManager")]),t._v(" "),s("td",[t._v("Manages "),s("RouterLink",{attrs:{to:"/zh/guide/naninovel-scripts.html"}},[t._v("naninovel script")]),t._v(" resources.")],1)]),t._v(" "),s("tr",[s("td",[t._v("IScriptPlayer")]),t._v(" "),s("td",[t._v("Handles "),s("RouterLink",{attrs:{to:"/zh/guide/naninovel-scripts.html"}},[t._v("naninovel scripts")]),t._v(" execution.")],1)]),t._v(" "),s("tr",[s("td",[t._v("ICameraManager")]),t._v(" "),s("td",[t._v("Manages cameras and other systems required for scene rendering.")])]),t._v(" "),s("tr",[s("td",[t._v("IResourceProviderManager")]),t._v(" "),s("td",[t._v("Manages "),s("code",[t._v("IResourceProvider")]),t._v(" objects.")])]),t._v(" "),s("tr",[s("td",[t._v("IStateManager")]),t._v(" "),s("td",[t._v("Handles "),s("code",[t._v("IEngineService")]),t._v("-related persistent data de-/serialization; provides API to "),s("RouterLink",{attrs:{to:"/zh/guide/save-load-system.html"}},[t._v("save and load")]),t._v(" game state.")],1)]),t._v(" "),s("tr",[s("td",[t._v("IUIManager")]),t._v(" "),s("td",[t._v("Manages "),s("code",[t._v("IManagedUI")]),t._v(" objects and handles "),s("RouterLink",{attrs:{to:"/zh/guide/user-interface.html#ui-customization"}},[t._v("UI customization")]),t._v(" feature.")],1)]),t._v(" "),s("tr",[s("td",[t._v("ICustomVariableManager")]),t._v(" "),s("td",[t._v("Provides access and allows modifying "),s("RouterLink",{attrs:{to:"/zh/guide/custom-variables.html"}},[t._v("custom variables")]),t._v(".")],1)]),t._v(" "),s("tr",[s("td",[t._v("ISpawnManager")]),t._v(" "),s("td",[t._v("Manages objects spawned with "),s("a",{attrs:{href:"/api/#spawn",target:"_blank"}},[s("code",[t._v("@spawn")])]),t._v(" commands.")])]),t._v(" "),s("tr",[s("td",[t._v("IUnlockableManager")]),t._v(" "),s("td",[t._v("Manages "),s("RouterLink",{attrs:{to:"/zh/guide/unlockable-items.html"}},[t._v("unlockable items")]),t._v(" (CG and movie gallery items, tips, etc).")],1)])])]),t._v(" "),s("p",[t._v("You can find built-in implementations of the services in the runtime source code stored at "),s("code",[t._v("Naninovel/Runtime")]),t._v(".")]),t._v(" "),s("h2",{attrs:{id:"adding-custom-services"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#adding-custom-services"}},[t._v("#")]),t._v(" Adding Custom Services")]),t._v(" "),s("p",[t._v("To add a new custom engine service, implement "),s("code",[t._v("IEngineService")]),t._v(" interface and add "),s("code",[t._v("InitializeAtRuntime")]),t._v(" attribute to the implementing class. Instance of the implementation will automatically be created during the engine initialization and become available via "),s("code",[t._v("Engine.GetService<TService>()")]),t._v(" API.")]),t._v(" "),s("p",[t._v("You can force your custom service to be initialized before or after other services using "),s("code",[t._v("InitializationPriority")]),t._v(" argument of "),s("code",[t._v("InitializeAtRuntime")]),t._v(" attribute; lower values will push it before other services in the initialization queue and vice-versa.")]),t._v(" "),s("p",[t._v("In order to be automatically instantiated, service implementation should have a compatible constructor (or a default one). Following arguments (in any order) are allowed:")]),t._v(" "),s("ul",[s("li",[t._v("Any number of other services ("),s("code",[t._v("IEngineService")]),t._v("-derived)")]),t._v(" "),s("li",[t._v("Any number of configuration objects ("),s("code",[t._v("Configuration")]),t._v("-derived)")]),t._v(" "),s("li",[t._v('A Unity\'s "MonoBehavior" proxy object ('),s("code",[t._v("IEngineBehaviour")]),t._v("-derived)")])]),t._v(" "),s("p",[t._v("Be aware, that it's not safe to use other services in the constructor. Instead, perform any initialization activities that require using other services at "),s("code",[t._v("InitializeServiceAsync")]),t._v(" method; to make sure required services are initialized when you're accessing them, list them in the service constructor (initialization queue is topologically sorted based on the constructor arguments).")]),t._v(" "),s("p",[t._v("In case your custom service has a persistent state, which you wish to de-/serialize with other engine services, implement "),s("code",[t._v("IStatefulService<TState>")]),t._v(" interface, where "),s("code",[t._v("TState")]),t._v(" is either "),s("code",[t._v("GameStateMap")]),t._v(", "),s("code",[t._v("GlobalStateMap")]),t._v(" or "),s("code",[t._v("SettingsStateMap")]),t._v(" depending if you want to store the state with the game sessions-specific, global state or settings. It's allowed to implement all three interfaces for a single service if required. For more information on different types of engine state see "),s("RouterLink",{attrs:{to:"/zh/guide/state-management.html"}},[t._v("state management guide")]),t._v(".")],1),t._v(" "),s("p",[t._v("Below is an example of a custom engine service implementation with some usage notices.")]),t._v(" "),s("div",{staticClass:"language-csharp extra-class"},[s("pre",{pre:!0,attrs:{class:"language-csharp"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("using")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("Naninovel")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("using")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("UniRx"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Async")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("using")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("UnityEngine")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token attribute"}},[s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("InitializeAtRuntime")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("CustomService")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token type-list"}},[s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("IEngineService")])]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("private")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("readonly")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("InputManager")]),t._v(" inputManager"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("private")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("readonly")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ScriptPlayer")]),t._v(" scriptPlayer"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" CustomService "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("InputManager")]),t._v(" inputManager"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ScriptPlayer")]),t._v(" scriptPlayer"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// The services are potentially not yet initialized here, ")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// refrain from using them.")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("inputManager "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" inputManager"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("scriptPlayer "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" scriptPlayer"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token return-type class-name"}},[t._v("UniTask")]),t._v(" InitializeServiceAsync "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    \t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Initialize the service here.")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// It's now safe to use services requested in the constructor.")]),t._v("\n        Debug"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("inputManager"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("ProcessInput"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        Debug"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("scriptPlayer"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("PlayedScript"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" UniTask"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("CompletedTask"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token return-type class-name"}},[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")])]),t._v(" ResetService "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Reset service state here.")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token return-type class-name"}},[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")])]),t._v(" DestroyService "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Stop the service and release any used resources here.")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[t._v("Given the aforementioned service, you can get via the engine API in the following way:")]),t._v(" "),s("div",{staticClass:"language-csharp extra-class"},[s("pre",{pre:!0,attrs:{class:"language-csharp"}},[s("code",[s("span",{pre:!0,attrs:{class:"token class-name"}},[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")])]),t._v(" customService "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" Engine"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token generic-method"}},[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("GetService")]),s("span",{pre:!0,attrs:{class:"token generic class-name"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("CustomService"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("div",{staticClass:"custom-block example"},[s("p",{staticClass:"custom-block-title"},[t._v("例")]),t._v(" "),s("p",[t._v("Another example of adding a custom engine service to manage item resources and configuration of an inventory UI can be found in the "),s("a",{attrs:{href:"https://github.com/Elringus/NaninovelInventory",target:"_blank",rel:"noopener noreferrer"}},[t._v("inventory example project on GitHub"),s("OutboundLink")],1),t._v(".")]),t._v(" "),s("p",[t._v("Specifically, the custom engine service is implemented via "),s("a",{attrs:{href:"https://github.com/Elringus/NaninovelInventory/blob/master/Assets/NaninovelInventory/Runtime/InventoryManager.cs",target:"_blank",rel:"noopener noreferrer"}},[t._v("InventoryManager.cs"),s("OutboundLink")],1),t._v(" runtime script.")])]),t._v(" "),s("h2",{attrs:{id:"overriding-built-in-services"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#overriding-built-in-services"}},[t._v("#")]),t._v(" Overriding Built-in Services")]),t._v(" "),s("p",[t._v("All the built-in services are referenced via interfaces in the engine source code, making it possible to swap any of them with a custom implementation.")]),t._v(" "),s("p",[t._v("Add a custom service in the same way as described above, but instead of "),s("code",[t._v("IEngineService")]),t._v(" implement a concrete engine interface and specify the overridden type (implementation type, not the interface) via "),s("code",[t._v("InitializeAtRuntime")]),t._v(" attribute. Your custom implementation will then be initialized instead of the built-in one.")]),t._v(" "),s("p",[t._v("Below is an example of a dummy "),s("code",[t._v("IInputManager")]),t._v(" implementation, that does nothing, but logs when any of its methods are invoked.")]),t._v(" "),s("div",{staticClass:"language-csharp extra-class"},[s("pre",{pre:!0,attrs:{class:"language-csharp"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("using")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("Naninovel")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("using")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("Naninovel"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("UI")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("using")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("UniRx"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Async")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("using")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("UnityEngine")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token attribute"}},[s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("InitializeAtRuntime")]),s("span",{pre:!0,attrs:{class:"token attribute-arguments"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("@"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("override")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("typeof")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token type-expression class-name"}},[t._v("InputManager")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")])])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("CustomInputManager")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token type-list"}},[s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("IInputManager")])]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token return-type class-name"}},[t._v("InputConfiguration")]),t._v(" Configuration "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("get")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token return-type class-name"}},[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("bool")])]),t._v(" ProcessInput "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("get")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("set")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" CustomInputManager "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("InputConfiguration")]),t._v(" config"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        Configuration "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" config"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token return-type class-name"}},[t._v("UniTask")]),t._v(" InitializeServiceAsync "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        Debug"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"CustomInputManager::InitializeServiceAsync()"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" UniTask"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("CompletedTask"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token return-type class-name"}},[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")])]),t._v(" ResetService "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        Debug"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"CustomInputManager::ResetService()"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token return-type class-name"}},[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")])]),t._v(" DestroyService "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        Debug"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"CustomInputManager::DestroyService()"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token return-type class-name"}},[t._v("IInputSampler")]),t._v(" GetSampler "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("string")])]),t._v(" bindingName"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        Debug"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token interpolation-string"}},[s("span",{pre:!0,attrs:{class:"token string"}},[t._v('$"CustomInputManager::GetSampler(')]),s("span",{pre:!0,attrs:{class:"token interpolation"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token expression language-csharp"}},[t._v("bindingName")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")])]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v(')"')])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("default")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token return-type class-name"}},[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")])]),t._v(" AddBlockingUI "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("IManagedUI")]),t._v(" ui"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("params")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("string")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")])]),t._v(" allowedSamplers"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        Debug"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token interpolation-string"}},[s("span",{pre:!0,attrs:{class:"token string"}},[t._v('$"CustomInputManager::AddBlockingUI(')]),s("span",{pre:!0,attrs:{class:"token interpolation"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token expression language-csharp"}},[t._v("ui"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("GetType")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Name")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")])]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v(')"')])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token return-type class-name"}},[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")])]),t._v(" RemoveBlockingUI "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("IManagedUI")]),t._v(" ui"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        Debug"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token interpolation-string"}},[s("span",{pre:!0,attrs:{class:"token string"}},[t._v('$"CustomInputManager::RemoveBlockingUI(')]),s("span",{pre:!0,attrs:{class:"token interpolation"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token expression language-csharp"}},[t._v("ui"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("GetType")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Name")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")])]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v(')"')])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[t._v("Now, when an input manager is requested via "),s("code",[t._v("Engine.GetService<IInputManager>()")]),t._v(", your custom implementation will be provided instead of the built-in "),s("code",[t._v("Naninovel.InputManager")]),t._v(".")])])}),[],!1,null,null,null);a.default=n.exports}}]);