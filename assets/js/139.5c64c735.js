(window.webpackJsonp=window.webpackJsonp||[]).push([[139],{508:function(e,t,n){"use strict";n.r(t);var r=n(33),a=Object(r.a)({},(function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[n("h1",{attrs:{id:"unitask"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#unitask"}},[e._v("#")]),e._v(" UniTask")]),e._v(" "),n("p",[n("a",{attrs:{href:"https://github.com/Cysharp/UniTask",target:"_blank",rel:"noopener noreferrer"}},[e._v("UniTask"),n("OutboundLink")],1),e._v(" is an open-sourced (MIT license) library providing a more efficient "),n("a",{attrs:{href:"https://docs.microsoft.com/en-us/dotnet/standard/parallel-programming/task-based-asynchronous-programming",target:"_blank",rel:"noopener noreferrer"}},[e._v("Task-based asynchronous programming"),n("OutboundLink")],1),e._v(" implementation for Unity (compared to "),n("a",{attrs:{href:"https://docs.microsoft.com/en-us/dotnet/api/system.threading.tasks.task",target:"_blank",rel:"noopener noreferrer"}},[e._v(".NET native"),n("OutboundLink")],1),e._v("). You can find more details regarding the nature of optimizations and usage examples in the "),n("a",{attrs:{href:"https://medium.com/@neuecc/a1ff0766029",target:"_blank",rel:"noopener noreferrer"}},[e._v("article by the author of the library"),n("OutboundLink")],1),e._v(".")]),e._v(" "),n("p",[e._v("All the Naninovel's asynchronous methods are built with UniTask; in order to use the public APIs (eg, to add custom commands or implementations of the engine services), the library should be installed in your Unity project. Naninovel is bundled with a copy of UniTask for convenience; if you already have the library installed, delete "),n("code",[e._v("Naninovel/ThirdParty/UniTask")]),e._v(" to prevent conflicts.")])])}),[],!1,null,null,null);t.default=a.exports}}]);