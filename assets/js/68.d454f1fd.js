(window.webpackJsonp=window.webpackJsonp||[]).push([[68],{444:function(t,e,n){"use strict";n.r(e);var a=n(33),r=Object(a.a)({},(function(){var t=this,e=t.$createElement,n=t._self._c||e;return n("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[n("h1",{attrs:{id:"エンジンアーキテクチャー"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#エンジンアーキテクチャー"}},[t._v("#")]),t._v(" エンジンアーキテクチャー")]),t._v(" "),n("p",[t._v("このエンジンは次の原則を念頭に設計されています: "),n("strong",[t._v("シーンからの独立")]),t._v(" と "),n("strong",[t._v("サービス指向")]),t._v("。")]),t._v(" "),n("h2",{attrs:{id:"シーンから独立"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#シーンから独立"}},[t._v("#")]),t._v(" シーンから独立")]),t._v(" "),n("p",[t._v("Unityの設計はシーンとプレハブ構成を促進できますが、ビジュアルノベルを開発する場合はあまり実用的ではありません。")]),t._v(" "),n("p",[t._v("全ての Naninovel システムは、"),n("a",{attrs:{href:"https://docs.unity3d.com/ScriptReference/MonoBehaviour.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("MonoBehaviour"),n("OutboundLink")],1),t._v(" に直接バインドされていないか、"),n("a",{attrs:{href:"https://docs.unity3d.com/ScriptReference/Object.DontDestroyOnLoad.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("persistent"),n("OutboundLink")],1),t._v(" ルート "),n("a",{attrs:{href:"https://docs.unity3d.com/ScriptReference/GameObject.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("ゲームオブジェクト"),n("OutboundLink")],1),t._v(" に紐づいています。")]),t._v(" "),n("p",[n("img",{attrs:{src:"https://i.gyazo.com/9805e2ce450bc486a007cdc001f8ae13.png",alt:""}})]),t._v(" "),n("p",[t._v("環境に応じて、次のルートオブジェクトが使用されます:")]),t._v(" "),n("ul",[n("li",[n("code",[t._v("Naninovel<Runtime>")]),t._v(" ランタイム用 (ビルドとエディターのプレイモードで);")]),t._v(" "),n("li",[n("code",[t._v("Naninovel<Editor>")]),t._v(" エディター用 (プレイモード外で).")])]),t._v(" "),n("p",[t._v("必要なすべてのゲームオブジェクトは、エンジンの初期化時に作成されます。これは "),n("a",{attrs:{href:"https://docs.unity3d.com/ScriptReference/RuntimeInitializeOnLoadMethodAttribute.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("RuntimeInitializeOnLoadMethod"),n("OutboundLink")],1),t._v(" を介して、アプリケーションの起動時に（プレイモードに入ったりビルドを実行した直後に）自動的かつ非同期に実行されます。\nこの動作を変更するには、エンジンの設定で "),n("code",[t._v("Initialize On Application Load")]),t._v(" プロパティを無効にし、手動で "),n("code",[t._v("RuntimeInitializer")]),t._v(" （ランタイムの場合）または "),n("code",[t._v("EditorInitializer")]),t._v("（エディターの場合）クラスを使用して初期化を呼び出します。")]),t._v(" "),n("p",[n("img",{attrs:{src:"https://i.gyazo.com/f58a8af9f2f6d71286061e55fc228896.png",alt:""}})]),t._v(" "),n("p",[t._v("初期化プロセスは非同期なので、 "),n("code",[t._v("InitializeAsync()")]),t._v(" メソッドを呼び出すときに "),n("a",{attrs:{href:"https://docs.microsoft.com/en-us/dotnet/csharp/programming-guide/concepts/async/",target:"_blank",rel:"noopener noreferrer"}},[t._v("async-await approach"),n("OutboundLink")],1),t._v(" を使用するか、静的な "),n("code",[t._v("Engine.OnInitialized")]),t._v(" イベントをサブスクライブします。")]),t._v(" "),n("p",[t._v("すべてのエンジンシステムを完全に無効にしてメモリから削除するには、静的メソッド "),n("code",[t._v("Engine.Destroy()")]),t._v(" を使用します。")]),t._v(" "),n("h2",{attrs:{id:"サービス指向"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#サービス指向"}},[t._v("#")]),t._v(" サービス指向")]),t._v(" "),n("p",[t._v("エンジン機能のほとんどは、エンジンサービスを介して実装されます。 エンジンサービスは "),n("code",[t._v("IEngineService")]),t._v(" インターフェースの実装であり、naninovelスクリプトの実行、アクターの管理、ゲームのセーブロードなど、特定のジョブを処理します。")]),t._v(" "),n("p",[t._v("エンジンシステムとやり取りする場合は、エンジンサービスを使用することをお勧めします。エンジンサービスへの参照は、静的メソッド "),n("code",[t._v("Engine.GetService<TService>()")]),t._v(" で取得できます。ここで "),n("code",[t._v("TService")]),t._v(" は、参照するサービスのタイプ（インターフェース）です。 たとえば、 "),n("code",[t._v("IScriptPlayer")]),t._v(" サービスを取得するには:")]),t._v(" "),n("div",{staticClass:"language-csharp extra-class"},[n("pre",{pre:!0,attrs:{class:"language-csharp"}},[n("code",[n("span",{pre:!0,attrs:{class:"token class-name"}},[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")])]),t._v(" player "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" Engine"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token generic-method"}},[n("span",{pre:!0,attrs:{class:"token function"}},[t._v("GetService")]),n("span",{pre:!0,attrs:{class:"token generic class-name"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("IScriptPlayer"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])])]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nplayer"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("Stop")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),n("p",[n("RouterLink",{attrs:{to:"/ja/guide/engine-services.html"}},[t._v("エンジンサービスガイド")]),t._v(" で、現在利用可能なすべてのエンジンサービスのリストと、カスタムサービスを上書き/追加する方法を見ることができます。")],1),t._v(" "),n("h2",{attrs:{id:"high-level-concept"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#high-level-concept"}},[t._v("#")]),t._v(" High-Level Concept")]),t._v(" "),n("p",[t._v("次のUML図は、エンジンアーキテクチャの高レベルの概念を示しています。図のすべてのクラスとインターフェースの名前は "),n("code",[t._v("Naninovel")]),t._v(" ネームスペース以下で整理されています。たとえば "),n("code",[t._v("Engine")]),t._v(" クラスを参照するには "),n("code",[t._v("Naninovel.Engine")]),t._v(" または"),n("a",{attrs:{href:"https://docs.microsoft.com/en-us/dotnet/csharp/programming-guide/namespaces/using-namespaces",target:"_blank",rel:"noopener noreferrer"}},[t._v("ネームスペースを含めて"),n("OutboundLink")],1),t._v(" ください。")]),t._v(" "),n("p",[n("object",{staticStyle:{width:"100%","max-width":"699px"},attrs:{data:"/engine-design.svg",type:"image/svg+xml"}})])])}),[],!1,null,null,null);e.default=r.exports}}]);